<h3 id='raw_move_event'>: raw_move_event()</h3><div class="highlight"><pre class="highlight lua tab-lua"><code><span class="kd">local</span>   <span class="p">;</span><span class="c1">-- example </span>
<span class="kd">local</span> <span class="n">destination</span>   <span class="c1">-- tile they want to move to</span>

<span class="kd">local</span> <span class="n">move_event</span>    <span class="o">=</span> <span class="n">create_move_event</span><span class="p">()</span>   <span class="c1">-- use this to create a raw move event</span>

<span class="kd">local</span> <span class="k">function</span> <span class="nf">on_begin_func</span><span class="p">()</span>
    <span class="nb">print</span><span class="p">(</span> <span class="s2">"Started jumping."</span> <span class="p">)</span>
<span class="k">end</span>

<span class="n">move_event</span><span class="p">.</span><span class="n">delay_frames</span> <span class="o">=</span> <span class="n">frames</span><span class="p">(</span> <span class="mi">30</span> <span class="p">)</span>
<span class="n">move_event</span><span class="p">.</span><span class="n">delta_frames</span> <span class="o">=</span> <span class="n">frames</span><span class="p">(</span> <span class="mi">60</span> <span class="p">)</span>
<span class="n">move_event</span><span class="p">.</span><span class="n">endlag_frames_frames</span> <span class="o">=</span> <span class="n">frames</span><span class="p">(</span> <span class="mi">20</span> <span class="p">)</span>
<span class="n">move_event</span><span class="p">.</span><span class="n">height</span> <span class="o">=</span> <span class="mi">0</span><span class="p">.</span><span class="mi">0</span>
<span class="n">move_event</span><span class="p">.</span><span class="n">dest_tile</span> <span class="o">=</span> <span class="n">destination</span>
<span class="n">move_event</span><span class="p">.</span><span class="n">on_begin_func</span> <span class="o">=</span> <span class="n">on_begin_func</span>

<span class="kd">local</span> <span class="n">can_move</span> <span class="o">=</span> <span class="p">:</span><span class="n">raw_move_event</span><span class="p">(</span> <span class="n">move_event</span><span class="p">,</span> <span class="n">ActionOrder</span><span class="p">.</span><span class="n">Voluntary</span> <span class="p">)</span>
</code></pre></div>
<blockquote>
<p>The above snippet will make the  wait for 30 frames (1/2 second), spend 60 frames (1 second) sliding to the destination tile, and wait for 20 frames (1/3 second) before it can act again.</p>
</blockquote>

<p>This function causes the  to move to a target  in a programmable manner.<br></p>

<p>This function returns <code>true</code> if the movement was possible <em>at the time it was called</em>, otherwise it returns <code>false</code>.</p>
<h4 id='function-call'>Function Call</h4>
<p><code>:raw_move_event( move_event, order )</code></p>
<h4 id='return-value'>Return Value</h4>
<p><strong><code>boolean</code></strong></p>
<h4 id='parameters'>Parameters</h4>
<p><code>move_event</code><br>
    &emsp;<em>The  object defining how the  will move.</em><br>
 <code>order</code><br>
    &emsp;<em>TODO figure out how ActionOrders work again<br></em><br></p>
<h4 id='moveevent-structure'>MoveEvent structure</h4>
<p><strong><code>frame_time_t</code></strong> <code>delay_frames</code><br>
    &emsp;<em>The amount of time you want the  to wait <strong>before</strong> starting the movement.</em><br>
<strong><code>frame_time_t</code></strong> <code>delta_frames</code><br>
    &emsp;<em>The <em>amount of time</em> you want the movement to take.</em><br>
<strong><code>frame_time_t</code></strong> <code>endlag_frames_frames</code><br>
    &emsp;<em>The <em>amount of time</em> <strong>after</strong> the movement you want the  to stop acting for.</em><br>
<strong><code>number</code></strong> <code>height</code><br>
    &emsp;<em>The height <em>(TODO units?)</em> that you want them to reach at the apex of their jump.</em><br>
 <code>dest_tile</code><br>
    &emsp;<em>The  that you want the  to move to.</em><br>
<strong><code>function</code></strong> <code>on_begin_func</code><br>
    &emsp;<em><code>nil</code>, or a <strong><code>function</code></strong> that you want to execute <strong>when the movement starts</strong>.</em><br>
<div class="highlight"><pre class="highlight lua tab-lua"><code><span class="kd">local</span> <span class="n">frame_time</span> <span class="o">=</span> <span class="n">frames</span><span class="p">(</span> <span class="mi">60</span> <span class="p">)</span>
</code></pre></div>
<aside class="notice">Use the <code>frames()</code> function to create a <b><code>frame_time_t</code></b> object for measurements of time.<br>Passing in a regular <b><code>number</code></b> or <b><code>integer</code></b> will cause an error.</aside></p>

<div class="highlight"><pre class="highlight lua tab-lua"><code><span class="k">function</span> <span class="nf">on_begin_func</span><span class="p">()</span>
    <span class="nb">print</span><span class="p">(</span> <span class="s2">"Started sliding."</span> <span class="p">)</span>
<span class="k">end</span>
</code></pre></div>

<aside class="notice"><code>on_begin_func</code> requires <b>no</b> parameters, and return <b>no value</b>.<br>
See the code snippet for an example.</aside>
