### <%= @class_header %> . can_move_to_func
``` lua
local <%= @variable_text %>	;-- example <%= @variable_text %>
local function move_check()
  if( self:get_team() == tile:get_team() )
    return true
  end
  return false
end

<%= @variable_text %>.can_move_to_func = move_check
```
> The above function allows the <%= @class_name %> to move onto any <%= @link_tile %> that is owned by its <%= @link_team %>.

Assigns a **`function`** that will be executed when this <%= @class_name %> attempts to move to another <%= @link_tile %>.

If the **`function`** returns `true` for a target <%= @link_tile %>, the <%= @class_name %> is able to move to the <%= @link_tile %>.<br>
Otherwise, the <%= @class_name %> is *not* able to move onto that <%= @link_tile %>.

#### Variable Type
**`function`**

#### Assignment
`<%= @variable_text %>.can_move_to_func = move_check`

#### Parameters
**`function`** `move_check`<br>
	&emsp;_The **`function`** you want this <%= @class_name %> to execute when trying to move._<br>
	
``` lua
local function can_move_to_func( tile )
  return true
end
```
<aside class="notice"><code>can_move_to_func</code> requires <b>one</b> <%= @class_name %> parameter, and to return a <b><code>boolean</code></b>.<br>
The <code>tile</code> parameter will be passed a reference to the <%= @link_tile %> it is trying to move to.</aside>
