<% _function_layout = "./includes/function_layout.md.erb" %>
<% _p = "includes/entity/functions/" %>
<% _s = ".erb" %>
<% _s2 = ".md.erb" %>

<%# The ones marked with "conditional" are ones that are only included by certain entity types. %>
<% _functions = 
    [
        { name: "get_name" },
        { name: "set_name", conditional: true },
        { name: "get_rank", conditional: true },
        { name: "set_rank", conditional: true },
        { name: "get_element" },
        { name: "set_element" },
        { name: "get_attack_level", conditional: true },
        { name: "set_attack_level", conditional: true },
        { name: "get_charge_level", conditional: true },
        { name: "set_charge_level", conditional: true },
        { name: "set_fully_charged_color", conditional: true },
        { name: "set_charge_position", conditional: true },

        { name: "get_id" },
        { name: "get_health" },
        { name: "get_max_health" },
        { name: "mod_max_health", conditional: true },
        { name: "get_max_health_mod", conditional: true },
        { name: "get_facing" },
        { name: "get_facing_away" },
        { name: "set_facing" },
        { name: "get_team" },
        { name: "is_team" },
        { name: "set_float_shoe", conditional: true },
        { name: "set_air_shoe", conditional: true },
        { name: "slide_when_moving", conditional: true },
        { name: "set_height" },
        { name: "get_height" },
        { name: "get_elevation" },
        { name: "set_elevation" },
        { name: "get_offset" },
        { name: "set_offset" },
        { name: "get_tile_offset" },
        { name: "get_field" },
        { name: "get_tile" },
        { name: "get_current_tile" },
        { name: "share_tile", conditional: true },

        { name: "toggle_hitbox", conditional: true },
        { name: "toggle_counter", conditional: true },
        { name: "add_defense_rule", conditional: true },
        { name: "remove_defense_rule", conditional: true },

        { name: "never_flip" },
        { name: "highlight_tile" },
        { name: "register_component" },
        { name: "shake_camera", conditional: true },
        { name: "set_explosion_behavior", cond: true },
    ]
%>

<% partial "" + locals[:data] if locals[:data].present? %>

<% _functions.each do |func| %>
    <% if func[:conditional].nil? %>
        <%= partial _function_layout, locals: { datafile: _p + func[:name] + _s } %>
    <% elsif locals[:extras].include? func[:name] %>
        <%= partial _function_layout, locals: { datafile: _p + func[:name] + _s } %>
    <% end %>
<% end %>

<%# The lines with the 'if' statements are ones that are only included by certain entity types. %>
<p><%= partial _p + "hide" + _s2 %></p>
<p><%= partial _p + "reveal" + _s2 %></p>
<p><%= partial _p + "show_shadow" + _s2 %></p>
<p><%= partial _p + "set_shadow" + _s2 if locals[:extras].include? "set_shadow" %></p>
<p><%= partial _p + "copy_hit_props" + _s2 %></p>
<p><%= partial _p + "set_hit_props" + _s2 %></p>

<p><%= partial _p + "slide" + _s2 %></p>
<p><%= partial _p + "jump" + _s2 %></p>
<p><%= partial _p + "teleport" + _s2 %></p>
<p><%= partial _p + "raw_move_event" + _s2 %></p>

<p><%= partial _p + "is_sliding" + _s2 %></p>
<p><%= partial _p + "is_jumping" + _s2 %></p>
<p><%= partial _p + "is_teleporting" + _s2 %></p>
<p><%= partial _p + "is_moving" + _s2 %></p>

<p><%= partial _p + "get_texture" + _s2 %></p>
<p><%= partial _p + "set_texture" + _s2 %></p>
<p><%= partial _p + "get_color" + _s2 %></p>
<p><%= partial _p + "set_color" + _s2 %></p>
<p><%= partial _p + "get_base_palette" + _s2 %></p>
<p><%= partial _p + "get_current_palette" + _s2 %></p>
<p><%= partial _p + "set_palette" + _s2 %></p>
<p><%= partial _p + "store_base_palette" + _s2 %></p>
<p><%= partial _p + "sprite" + _s2 %></p>
<p><%= partial _p + "get_animation" + _s2 %></p>
<p><%= partial _p + "set_animation" + _s2 %></p>
<p><%= partial _p + "create_node" + _s2 %></p>
<p><%= partial _p + "create_sync_node" + _s2 if locals[:extras].include? "create_sync_node" %></p>
<p><%= partial _p + "remove_sync_node" + _s2 if locals[:extras].include? "remove_sync_node" %></p>

<p><%= partial _p + "erase" + _s2 %></p>
<p><%= partial _p + "delete" + _s2 %></p>
<p><%= partial _p + "is_deleted" + _s2 %></p>
<p><%= partial _p + "will_erase_eof" + _s2 %></p>

<p><%= partial _p + "register_status_callback" + _s2 if locals[:extras].include? "register_status_callback" %></p>
<p><%= partial _p + "normal_attack_func" + _s2 if locals[:extras].include? "normal_attack_func" %></p>
<p><%= partial _p + "charged_attack_func" + _s2 if locals[:extras].include? "charged_attack_func" %></p>
<p><%= partial _p + "special_attack_func" + _s2 if locals[:extras].include? "special_attack_func" %></p>
<p><%= partial _p + "attack_func" + _s2 if locals[:extras].include? "attack_func" %></p>
<p><%= partial _p + "collision_func" + _s2 if locals[:extras].include? "collision_func" %></p>
<p><%= partial _p + "update_func" + _s2 if locals[:extras].include? "update_func" %></p>
<p><%= partial _p + "delete_func" + _s2 if locals[:extras].include? "delete_func" %></p>
<p><%= partial _p + "on_spawn_func" + _s2 if locals[:extras].include? "on_spawn_func" %></p>
<p><%= partial _p + "battle_start_func" + _s2 if locals[:extras].include? "battle_start_func" %></p>
<p><%= partial _p + "battle_end_func" + _s2 if locals[:extras].include? "battle_end_func" %></p>
<p><%= partial _p + "can_move_to_func" + _s2 if locals[:extras].include? "can_move_to_func" %></p>
