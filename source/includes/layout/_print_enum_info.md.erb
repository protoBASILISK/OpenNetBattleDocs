<% _type = "verbose" %>
<% _type = locals[:type] unless locals[:type] == nil %>

<% _current_enum = load_json_data( Dir.pwd + locals[:file] ) %>

<% _substitute_text = {} %>
<% _substitute_text[:doc_class_name] = _current_enum["name"] %>
<% _substitute_text[:lua_class_name] = _current_enum["lua_class_name"] or _current_enum["name"] %>

<% _current_enum = preprocess_json_data( _current_enum, _substitute_text ) %>

NAME | MEANING 
---- | -------
<% _current_enum["items"].each do |item| %>
    <%= item["name"] %> | <% if item["meaning"].present? %> <% item["meaning"].each do |line| %><%= line %><br><% end %><% end %>
<% end %>

<% if not is_empty( _current_enum["functions"] ) %>
    <% _layout_root = "includes/layout/" + _type + "/" %>

    <% _func_root = "/data/" + _current_enum["subdirectory"] + "/functions/" %>

    <% _current_enum["functions"].each do |func| %>
        <% _func_data = load_json_data( Dir.pwd + "" + _func_root + func + ".json" ) %>
        <% _func_data = preprocess_json_data( _func_data, _substitute_text ) %>

        <%= partial _layout_root + "enum_function_layout.md.erb",
            locals: { f: _func_data, c: _current_enum } %>
    <% end %>

<% end %>