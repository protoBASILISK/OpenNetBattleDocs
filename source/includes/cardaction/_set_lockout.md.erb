### CardAction : set_lockout()
``` lua
local card_action	-- example card_action
local lockout_time = make_animation_lockout()

card_action:set_lockout( lockout_time )
```

Assigns the **`LockoutProperties`** describing how long a <%= @link_character %> has to wait between uses of similar <%= @link_card_action %>s.

#### Function Call
`card_action:set_lockout( lockout )`

#### Parameters
<%= @link_lockout_group %> `lockout`<br>
	&emsp;_The <%= @link_card_properties %> describing the type of action you want to become unavailable for a short time._

<aside class="notice">To create a <b><code>LockoutProperties</code></b>, use one of the following functions:<br><code>make_animation_lockout()</code>, <code>make_async_lockout</code>, or <code>make_sequence_lockout</code>.</aside>

### make_animation_lockout()
``` lua
local animation_lockout = make_animation_lockout()
```

Returns a **`LockoutProperties`** object.

Any <%= @link_card_action %> that uses this type of lockout will stop similar <%= @link_card_action %>s from being able to be used **until the animation finishes**.

#### Function Call
`make_animation_lockout()`

### make_async_lockout()
``` lua
local cooldown_lockout = make_async_lockout( time_in_seconds )
```

Returns a **`LockoutProperties`** object.

Any <%= @link_card_action %> that uses this type of lockout will stop similar <%= @link_card_action %>s from being able to be used for a specified period of time **after the animation finishes**.

#### Function Call
`make_async_lockout( time )`

#### Parameters
**`number`** `time`<br>
	&emsp;_The minimum time **in seconds** allowed between uses._

### make_sequence_lockout()
``` lua
local sequence_lockout = make_sequence_lockout()
```

Returns a **`LockoutProperties`** object.

Any <%= @link_card_action %> that uses this type of lockout will stop similar <%= @link_card_action %>s from being able to be used **until the sequence finishes**.<br>
Use this for a series of actions that *have to* take place in a specific sequence.

#### Function Call
`make_sequence_lockout()`
