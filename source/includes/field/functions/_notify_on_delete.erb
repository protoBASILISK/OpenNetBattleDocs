<% @current_function =
    {
    	version: "2.0",
        function_name: "notify_on_delete",
        lua_code:
"local target 	-- Example target entity
local observer 	-- Example observing entity
function onDelete( tar, obs )
	print( \"Observer saw Target die.\" )
end

field:notify_on_delete( target, observer, function( t, e ) print( \"Observer saw Target die.\" ) end )
field:notify_on_delete( target, observer, onDelete )",
        lua_comment: "",
        description: "This sets up a `callback function` that will be executed when the **`target`** is deleted/destroyed.<br>
                        If the **`observer`** is deleted, the `callback` will **not** be executed.",
        parameters: [
            {
                name: "target_id",
                desc: "The <b>unique ID</b> of the " + @link_entity + " that will trigger the callback on deletion.",
                type: "number"
            },
            {
                name: "observer_id",
                desc: "The <b>unique ID</b> of the " + @link_entity + " that will be passed to the `callback function`.",
                type: "number"
            },
            {
                name: "callback_function",
                desc: "The <b>`function`</b> that will be called when the " + @link_entity + " with the ID `targetID` is deleted.",
                type: "function"
            }
        ],
        return_value_type: "number",
        return_value_desc: "",
        footnotes:
        [
            {
                type: "notice",
                text: "`callback_function` requires **one** " + @link_entity + " parameter, and to return **no value**.",
                code:
"function callback_function( target )
	print( \"Target died.\" )
end"
            }
        ]
    }
%>
