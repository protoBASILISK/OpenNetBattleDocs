
{
	"version": "2.0",
	"name": "find_obstacles",
	"example_code": 
	[
		"local <%= variable_text %>\t-- example <%= doc_class_name %>",
		"",
		"\t-- first method",
		"local blue_team_filter = function( obstacle )",
		"\treturn obstacle:get_team() == Team.Blue",
		"end",
		"\t-- second method",
		"local all_blue_obstacles = <%= variable_text %>:find_obstacles( blue_team_filter )",
		"",
		"\t-- second method",
		"local all_red_obstacles",
		"\t= <%= variable_text %>:find_obstacles( function( obstacle ) return obstacle:get_team() == Team.Red end )"
	],
	"example_comment": "The above snippet shows two ways of passing a function to `find_obstacles()`.",
    "summary": "",
    "description": [
		"Iterates through all of the <%= type 'Obstacle' %>s on this <%= type 'Tile' %>, and returns a list of <%= type 'Obstacle' %>s that match a filter `function`.",
		"&emsp;To *include* a <%= type 'Obstacle' %> in the final list, the filter `function` has to return `true`.",
		"&emsp;If it returns `false` for a <%= type 'Obstacle' %>, it will *not* be included."
	],
	"parameters": [
		{
			"name": "search_function",
			"desc": "A filter function that determines if the <%= type 'Obstacle' %> gets added to the list.",
			"type": "function"
		}
	],
	"return_value_type": "list&lt;<%= type 'Obstacle' %>&gt;",
	"return_value_desc": "",
	"footnotes":
	[
		{
			"type": "notice",
			"text":
			[
				"`search_function` requires **one** <%= type 'Obstacle' %> parameter, and to return a `boolean`.",
				"Return `true` for any <%= type 'Obstacle' %> that you *do* want to include.",
				"Return `false` for any <%= type 'Obstacle' %> that you *do not* want to include.",
				"_The function does **not** have to be named `search_function`, it is just for illustrative purposes._"
			],
			"code": 
			[
				"function search_function( obstacle )",
				"\treturn obstacle:get_team() == Team.Red",
				"end"
			],
			"comment": "When used with the above snippet, `find_obstacles()` returns all <%= type 'Obstacle' %>s on this <%= type 'Tile' %> that are currently on the Red team."
		}
	]
}