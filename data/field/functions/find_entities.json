
{
	"version": "2.0",
	"name": "find_entities",
	"example_code": 
	[
		"local field\t-- example field",
		"",
		"local blue_team_filter = function( entity )",
		"\treturn entity:get_team() == Team.Blue",
		"end",
		"",
		"local all_blue_entities = field:find_entities( blue_team_filter )",
		"local all_red_entities = field:find_entities( function( entity ) return entity:get_team() == Team.Red end )"
	],
	"example_comment": "The above snippet shows two ways of passing a function to `find_entities()`.",
	"description": [
		"Iterates through all of the <%=entity%> objects on the battlefield, and returns a list of <%=entity%>s that match a filter `function`.",
		"&emsp;To *include* a <%=entity%> in the final list, the filter `function` has to return `true`.",
		"&emsp;If it returns `false` for a <%=entity%>, it will *not* be included."
	],
	"parameters": [
		{
			"name": "search_function",
			"desc": "A filter function that determines if the <%=entity%> gets added to the list.",
			"type": "function"
		}
	],
	"return_value_type": "list&lt;<%=entity%>&gt;",
	"return_value_desc": "",
	"footnotes":
	[
		{
			"type": "notice",
			"text":
			[
				"`search_function` requires **one** <%=entity%> parameter, and to return a `boolean`.",
				"Return `true` for any <%=entity%> that you *do* want to include.",
				"Return `false` for any <%=entity%> that you *do not* want to include.",
				"_The function does **not** have to be named `search_function`, it is just for illustrative purposes._"
			],
			"code": 
			[
				"function search_function( entity )",
				"\treturn entity:get_team() == Team.Red",
				"end"
			],
			"comment": "When used with the above snippet, `find_entities()` returns all <%=entity%> objects that are currently on the Red team."
		}
	]
}